#!/bin/sh

/bin/busybox --install -s /bin

mount -t devtmpfs -o nosuid devtmpfs /dev
#Mount fstab - /proc /sys
mount -a

#Run 3 times, because new devices found after initial module load
/etc/init.d/rcS-detect_kmods 2> /dev/null
sleep 1
/etc/init.d/rcS-detect_kmods 2> /dev/null
sleep 1
/etc/init.d/rcS-detect_kmods 2> /dev/null

#Check if we can find a rootfs then try to mount it - this also works with root=/dev/whateverN
ROOTUUID=`cat /proc/cmdline | tr ' ' '\n' | grep root= | cut -d= -f2`
[[ ! -z "$ROOTUUID" ]] && ROOTDISK=`blkid | grep $ROOTUUID | cut -d: -f1`

if [ -b "$ROOTDISK" ]; then
 #Ugly, ugly, ugly. It will never loop ofc, but I can abort commands before switch_root this way
 while true; do
 mkdir /newroot
 mount -o errors=remount-ro $ROOTDISK /newroot
 [[ $? -ne 0 ]] && { echo "Could not mount root FS!"; break; }
 mount --move /sys /newroot/sys
 [[ $? -ne 0 ]] && { echo "Could not move mount point for /sys!"; break; }
 mount --move /dev /newroot/dev
 [[ $? -ne 0 ]] && { echo "Could not move mount point for /dev!"; break; }
 mount --move /proc /newroot/proc
 [[ $? -ne 0 ]] && { echo "Could not move mount point for /proc!"; break; }
 exec switch_root /newroot /sbin/init
 break
 done
fi

#Fall back to Initrd Init if no root found.
exec /bin/init <dev/console >dev/console 2>&1
