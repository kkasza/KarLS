#!/bin/sh

VER="1.0"

usage()
{
 echo "kpm - KarLS Package Manager $VER"
 echo "$1" 1>&2
 echo ""
 echo "Usage: $0 <Command> (Parameters if needed) <Root directory - defaults to />"
 echo "Valid commands:"
 echo "install   - Install a package"
 echo "upgrade   - Upgrade/reinstall/downgrade a package (basically force install)"
 echo "uninstall - Uninstall files installed by defined package"
 echo "set       - Set URL/DIR for repo"
 echo "list      - List Installed packages"
 echo "listrepo  - List packages available in repository(s)"
 exit 1
}

error()
{
 echo "$1" 1>&2
 exit 1
}

noerror()
{
 echo "$1"
 exit 0
}

[[ `id -u` != "0" ]] && usage "Run this program only as root!"

CMD=`echo $1 | tr '[:upper:]' '[:lower:]'`

[[ "$CMD" == "" ]] && usage "Not enough parameters"

HW=`uname -m`

# INSTALL / UPGRADE ------------------------------------------------------
if [ "$CMD" == "install" ] || [ "$CMD" == "upgrade" ]; then
 UPG="NO"
 [[ "$CMD" == "upgrade" ]] && UPG="YES"
 [[ "$3" == "" ]] && DST="/" || DST=$3
 [[ ! -d "$DST" ]] && error "Root directory $DST not found"

 KPF=$2
 if [ ! -f "$KPF" ]; then
  if [ -f "$DST/etc/kpm/repo" ]; then
   REPO=`head -1 $DST/etc/kpm/repo`
   [[ ! -f "$REPO/repo.db" ]] && error "repo.db in repo $REPO not found"
   #Try finding the package name without version first
   FN=`grep -m 1 -e ^$KPF- $REPO/repo.db`
   if [ ! -f "$REPO/$FN" ]; then
    #Then with version, without arch. & .kp suffix
    FN=`grep -m 1 -x $KPF-$HW.kp $REPO/repo.db`
    if [ ! -f "$REPO/$FN" ]; then
     #Then with full arch w/o suffix
     FN=`grep -m 1 -x $KPF.kp $REPO/repo.db`
     if [ ! -f "$REPO/$FN" ]; then
      #Then full filename???
      FN=`grep -m 1 -x $KPF $REPO/repo.db`
      if [ ! -f "$REPO/$FN" ]; then
       error "Package file $KPF not found"
      fi
     fi
    fi
   fi
   KPF=$REPO/$FN
  else
   error "No repo. Package file $KPF not found"
  fi
 fi

 KPN_FULL=`basename -s .kp $KPF`
 KPN=`echo $KPN_FULL | cut -d- -f1`
 KPN_VER=`echo $KPN_FULL | cut -d- -f2`

 if [ "$UPG" == "NO" ]; then
  [[ -d "$DST/etc/kpm/pkg/$KPN" ]] && { VER=`tail -1 $DST/etc/kpm/pkg/$KPN/VER`; noerror "Package $KPN ($VER) is already installed to $DST"; }
 fi
 echo "Installing $KPN ($KPN_VER) to $DST"
 PTMP=`mktemp -d`
 tar -C $PTMP -xJf $KPF || error "Package error with $KPF, installation cancelled!"
 [[ ! -f "$PTMP/KARLS_PACKAGE" ]] && error "$KPF is not a KarLS Package, installation cancelled!"
 if [ -f "$PTMP/PREREQ" ]; then
  for pkg in `cat $PTMP/PREREQ`; do
   echo "Installing $pkg as Prerequisite for $KPN"
   # Yup, this is true recursion
   kpm install $pkg $DST || { rm -rf $PTMP; error "Error installing $pkg, installation of $KPN cancelled"; }
  done
 fi
 cp -Rpf $PTMP/FILES/* $DST 2> /dev/null
 mkdir -p $DST/etc/kpm/pkg/$KPN
 cp $PTMP/MANIFEST $PTMP/DESC $PTMP/KARLS_PACKAGE $PTMP/INSTALL $PTMP/ESSENTIAL $DST/etc/kpm/pkg/$KPN 2> /dev/null
 echo "$KPN_VER" > $DST/etc/kpm/pkg/$KPN/VER
 if [ -f "$PTMP/INSTALL" ]; then
  echo "Running install script for $KPN"
  chmod 755 $PTMP/INSTALL && $PTMP/INSTALL $DST
 fi
 rm -rf $PTMP
 exit 0
fi
# END INSTALL ------------------------------------------------------------

# UNINSTALL --------------------------------------------------------------
if [ "$CMD" == "uninstall" ]; then
 [[ "$3" == "" ]] && DST="/" || DST=$3
 [[ ! -d "$DST" ]] && error "Root directory $DST not found"
 PKG=$2
 [[ ! -d "$DST/etc/kpm/pkg/$PKG" ]] && error "Package $PKG not found installed in $DST"
 [[ ! -f "$DST/etc/kpm/pkg/$PKG/MANIFEST" ]] && error "Package MANIFEST for $PKG not found in $DST"
 [[ -f "$DST/etc/kpm/pkg/$PKG/ESSENTIAL" ]] && error "Package $PKG is essential, can not be uninstalled"
 echo "Uninstalling $PKG from $DST"
 for pfile in `cat $DST/etc/kpm/pkg/$PKG/MANIFEST`; do
  rm $DST/$pfile
 done
  rm -rf $DST/etc/kpm/pkg/$PKG
 exit 0
fi
# END UNINSTALL ----------------------------------------------------------

# SET --------------------------------------------------------------------
if [ "$CMD" == "set" ]; then
 [[ "$3" == "" ]] && DST="/" || DST=$3
 [[ ! -d "$DST" ]] && error "Root directory $DST not found"

 URL="$2"
 ISDIR=`echo $URL | egrep "^http://|^https://"`
 if [ -z "$ISDIR" ]; then
  [[ ! -d "$URL" ]] && error "Repo directory $URL not found"
 fi
 mkdir -p $DST/etc/kpm
 echo "$URL" > $DST/etc/kpm/repo
 echo "Setting kpm repo to $URL"
 exit 0
fi

# END SET ----------------------------------------------------------------

# LIST -------------------------------------------------------------------
if [ "$CMD" == "list" ]; then
 [[ "$2" == "" ]] && DST="/" || DST=$2
 [[ ! -d "$DST" ]] && error "Root directory $DST not found"
 [[ ! -d "$DST/etc/kpm/pkg" ]] && noerror "No installed packages repo found in Root directory $DST"
 echo "Installed packages in $DST:"
 for pkgname in `ls -1 $DST/etc/kpm/pkg`; do
  DSC=`tail -1 $DST/etc/kpm/pkg/$pkgname/DESC | cut -d: -f2`
  VER=`tail -1 $DST/etc/kpm/pkg/$pkgname/VER`
  [[ -f "$DST/etc/kpm/pkg/$pkgname/ESSENTIAL" ]] && DSC="$DSC !!! Essential package"
  echo "$pkgname ($VER)$DSC"
 done
 exit 0
fi
# END LIST ---------------------------------------------------------------

# LIST REPO --------------------------------------------------------------
if [ "$CMD" == "listrepo" ]; then
 [[ "$2" == "" ]] && DST="/" || DST=$2
 [[ ! -d "$DST" ]] && error "Root directory $DST not found"
 [[ ! -f "$DST/etc/kpm/repo" ]] && error "Repo not found in Root directory $DST"
 REPO=`head -1 $DST/etc/kpm/repo`
 [[ ! -d "$REPO" ]] && error "Repo directory $REPO not found"
 [[ ! -f "$REPO/repo.db" ]] && error "Repo.db not found in repo directory $REPO"
 echo "Packages in repo.db in $DST:"
 cat $REPO/repo.db
 exit 0
fi
# END LIST REPO ----------------------------------------------------------

usage "Unknown command"
