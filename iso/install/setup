#!/bin/sh

#Install the packaged kpm first using the kpm which was on the ISO (may be a simplified version later)
sh /mnt/iso/install/kpm install kpm || { echo "kpm error, installation cancelled!"; exit 1; }

KARLS=`cat /mnt/iso/karls_iso`
echo ""
echo "Welcome to $KARLS ISO Installation/Live System"

while true; do

echo ""
echo "Press Any Key to start Installation or \"S\" to drop to Live ISO Shell"
read -s -n 1
REP=`echo $REPLY | tr '[:upper:]' '[:lower:]'`
[[ "$REP" == "s" ]] && exit 0

echo ""
echo "                        * * * WARNING * * *"
echo ""
echo "Installing KarLS on a disk will DESTROY all other data on that disk!"
echo ""
echo "Possible installation target candidates:"
fdisk -l | grep Disk
echo ""
echo -n "Enter device to install: "
read
[[ ! -b "$REPLY" ]] && { echo "[$REPLY] not found or not a device!"; continue; }
TRGT="$REPLY"

echo ""
echo "Insallation target is [$TRGT]!"
fdisk -l $TRGT
echo ""
echo "             * * * LAST CHANCE! Do you really want to continue? * * *"
echo ""
echo "KarLS will be installed on [$TRGT], and all pre-existing data will be destroyed there!"
echo ""
echo -n "Type \"YES\" to continue installation: "
read
[[ "$REPLY" != "YES" ]] && { echo "Installation cancelled!"; continue; }

UEFI=0
[[ -d "/sys/firmware/efi" ]] && { echo "UEFI detected!"; UEFI=1; }

if [ "$UEFI" == "0" ]; then
echo "Partitioning disk for MBR..."
echo -e "o\nn\np\n1\n2048\n\na\n1\nw\n" | fdisk $TRGT > /dev/null || { echo "fdisk error, installation cancelled!"; break; }

echo "Formatting Linux partition..."
kpm install e2fsprogs || { echo "kpm error, installation cancelled!"; break; }
mkfs.ext4 "$TRGT"1 > /dev/null || { echo "mkfs.ext4 error, installation cancelled!"; break; }

echo "Mounting target..."
mkdir -p /mnt/target
mount "$TRGT"1 /mnt/target > /dev/null || { echo "mount error, installation cancelled!"; break; }

else
kpm install util_linux || { echo "kpm error, installation cancelled!"; break; }
echo "Partitioning disk for GPT..."
echo -e "g\nn\n1\n2048\n+64M\nt\n1\nn\n2\n\n\nw\n" | /usr/sbin/fdisk -W always $TRGT > /dev/null || { echo "fdisk error, installation cancelled!"; break; }

echo "Formatting partitions..."
kpm install e2fsprogs || { echo "kpm error, installation cancelled!"; break; }
mkfs.vfat "$TRGT"1 > /dev/null || { echo "mkfs.vfat error, installation cancelled!"; break; }
mkfs.ext4 "$TRGT"2 > /dev/null || { echo "mkfs.ext4 error, installation cancelled!"; break; }

echo "Mounting target..."
mkdir -p /mnt/target
mount "$TRGT"2 /mnt/target > /dev/null || { echo "mount error, installation cancelled!"; break; }
mkdir -p /mnt/target/boot/efi
mount -t vfat "$TRGT"1 /mnt/target/boot/efi > /dev/null || { echo "mount error, installation cancelled!"; break; }
fi

echo "Installing Kernel files..."
KVER=`cat /mnt/iso/boot/kernel_version`
mkdir -p /mnt/target/boot/grub /mnt/target/etc/kpm
cp /etc/kpm/repo /mnt/target/etc/kpm
kpm install kernel /mnt/target || { echo "kpm error, installation cancelled!"; break; }

echo "Installing GRUB boot loader..."

cp /mnt/iso/install/grub.cfg /mnt/target/boot/grub

MODE=0
NOFBCON=`grep "nofb nomodeset" /proc/cmdline`
SERIALCON=`grep console=ttyS0 /proc/cmdline`
if [ -n "$NOFBCON" ]; then
 echo "Installing with No Framebuffer, setting as default choice for boot menu"
 MODE=1
fi
if [ -n "$SERIALCON" ]; then
 echo "Installing over Serial Console, setting as default choice for boot menu"
 MODE=2
fi
echo "set default=$MODE" >> /mnt/target/boot/grub/grub.cfg

echo "" >> /mnt/target/boot/grub/grub.cfg

if [ "$UEFI" == "0" ]; then
 BLK=`blkid "$TRGT"1 | cut -d' ' -f2 | cut -d= -f2`
else
 BLK=`blkid "$TRGT"2 | cut -d' ' -f2 | cut -d= -f2`
fi

echo "menuentry \"KarLS\" {" >> /mnt/target/boot/grub/grub.cfg
echo "	search -u $BLK --set=root" >> /mnt/target/boot/grub/grub.cfg
echo "	linux /boot/vmlinuz-$KVER root=$BLK" >> /mnt/target/boot/grub/grub.cfg
echo "	initrd /boot/initrd-$KVER.gz" >> /mnt/target/boot/grub/grub.cfg
echo "}" >> /mnt/target/boot/grub/grub.cfg
echo "" >> /mnt/target/boot/grub/grub.cfg
echo "menuentry \"KarLS No Framebuffer\" {" >> /mnt/target/boot/grub/grub.cfg
echo "	search -u $BLK --set=root" >> /mnt/target/boot/grub/grub.cfg
echo "	set gfxpayload=text" >> /mnt/target/boot/grub/grub.cfg
echo "	linux /boot/vmlinuz-$KVER nofb nomodeset root=$BLK" >> /mnt/target/boot/grub/grub.cfg
echo "	initrd /boot/initrd-$KVER.gz" >> /mnt/target/boot/grub/grub.cfg
echo "}" >> /mnt/target/boot/grub/grub.cfg
echo "" >> /mnt/target/boot/grub/grub.cfg
echo "menuentry \"KarLS Serial Console\" {" >> /mnt/target/boot/grub/grub.cfg
echo "	search -u $BLK --set=root" >> /mnt/target/boot/grub/grub.cfg
echo "	linux /boot/vmlinuz-$KVER console=ttyS0,9600 root=$BLK" >> /mnt/target/boot/grub/grub.cfg
echo "	initrd /boot/initrd-$KVER.gz" >> /mnt/target/boot/grub/grub.cfg
echo "}" >> /mnt/target/boot/grub/grub.cfg

if [ "$UEFI" == "0" ]; then
kpm install grub || { echo "kpm error, installation cancelled!"; break; }
grub-install --boot-directory=/mnt/target/boot "$TRGT" || { echo "grub-install error, installation cancelled!"; break; }

else
kpm install grub_efi || { echo "kpm error, installation cancelled!"; break; }
mkdir -p /mnt/target/boot/efi/EFI/BOOT

echo "search -u $BLK --set=root" > /mnt/target/boot/grub/grub-early.cfg
echo "configfile /boot/grub/grub.cfg" >> /mnt/target/boot/grub/grub-early.cfg

grub-mkimage -o /mnt/target/boot/efi/EFI/BOOT/BOOTX64.EFI -O x86_64-efi -c /mnt/target/boot/grub/grub-early.cfg -p /boot/grub \
boot.mod cat.mod configfile.mod cpuid.mod disk.mod elf.mod exfat.mod ext2.mod fat.mod file.mod hdparm.mod help.mod iso9660.mod linux.mod loadenv.mod \
lsefi.mod ls.mod msdospart.mod normal.mod ntfs.mod part_gpt.mod part_msdos.mod reboot.mod scsi.mod search_fs_file.mod search.mod \
serial.mod terminal.mod terminfo.mod usb_keyboard.mod usbserial_common.mod usbserial_pl2303.mod

fi

echo "Installing base OS packages..."

kpm install karls_base /mnt/target || { echo "kpm error, installation cancelled!"; break; }

if [ -z "$SERIALCON" ]; then
 rm /mnt/target/etc/inittab-serial
else
 mv /mnt/target/etc/inittab-serial /mnt/target/etc/inittab
fi

if [ "$UEFI" == "0" ]; then
kpm install grub /mnt/target || { echo "kpm error, installation cancelled!"; break; }
else
kpm install grub_efi /mnt/target || { echo "kpm error, installation cancelled!"; break; }
echo "$TRGT""1		/boot/efi	vfat	ro,defaults,nosuid,nodev,noexec 0 0" >> /mnt/target/etc/fstab
fi

DEVS=`ifconfig -a | grep "Link encap" | cut -f1 -d' ' | grep -v lo`
for dev in $DEVS; do
 echo "Network interface $dev found, setting to dhcp. Change /etc/network/$dev for fixed IP."
 echo "DHCP=YES" > /mnt/target/etc/network/$dev
 echo "IP=1.1.1.1" >> /mnt/target/etc/network/$dev
 echo "NETMASK=255.255.255.255" >> /mnt/target/etc/network/$dev
done

echo ""
echo "KarLS Installation finished!"
echo "WARNING! root has no password set. You know what that means."
break

done

echo ""
echo "Press Any Key to Reboot or \"S\" to drop to Live ISO Shell (E.g. to install further packages with kpm to /mnt/target)"
read -s -n 1
REP=`echo $REPLY | tr '[:upper:]' '[:lower:]'`
[[ "$REP" == "s" ]] && exit 0

#Force reboot
sync
[[ "$UEFI" == "1" ]] && umount -r /mnt/target/boot/efi
umount -r /mnt/target
echo 1 > /proc/sys/kernel/sysrq
echo b > /proc/sysrq-trigger
