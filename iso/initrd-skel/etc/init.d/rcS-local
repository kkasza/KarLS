#!/bin/sh

#Kernel parameter, hardcoded into isolinux and grub in iso image
if [ "$KARLS_MEDIA" == "ISO" ]; then
 echo "Booting from ISO"

 /etc/init.d/rcS-mount_iso
 #Try a 4th (!!!) module load round after 3 secs, if ISO not found / maybe it's a slow USB
 if [ ! -e "/mnt/iso/karls_iso" ]; then
  sleep 3
  /etc/init.d/rcS-detect_kmods 2> /dev/null
  /etc/init.d/rcS-mount_iso
 fi
 #If ISO is found, setup system for install
 if [ -e "/mnt/iso/karls_iso" ]; then
  #Try to load any missing firmware from iso
  LOADMODS=""
  FIRMWARE=`dmesg | grep "firmware load" | grep error`
  if [ "$FIRMWARE" != "" ]; then
   MODS=`dmesg | grep "firmware load" | grep error | cut -d' ' -f1 | sort -u`
   LOADMODS="$LOADMODS $MODS"
   FILES=`dmesg | grep "firmware load" | grep error | cut -d' ' -f7 | sort -u`
   mkdir -p /lib/firmware
   cd /mnt/iso/firmware && cp $FILES /lib/firmware 2> /dev/null
  fi
  FIRMWARE=`dmesg | grep regulatory.db | grep failed`
  if [ "$FIRMWARE" != "" ]; then
   mkdir -p /lib/firmware
   cp /mnt/iso/firmware/regulatory.db* /lib/firmware 2> /dev/null
   LOADMODS="$LOADMODS cfg80211"
  fi
  if [ "$LOADMODS" != "" ]; then
   for M in $LOADMODS; do
    # platform is not a module, it got in with the regulatory.db loading error message
    [[ "$M" == "platform" ]] && continue;
    rmmod $M
   done
   for M in $LOADMODS; do
    [[ "$M" == "platform" ]] && continue;
    modprobe $M
   done
   #for the terminal messages to cleanup
   sleep 1s
  fi
  if [ -e "/mnt/iso/install/setup" ]; then
   echo "#!/bin/sh" > /bin/setup
   echo ". /mnt/iso/install/setup" >> /bin/setup
   chmod 755 /bin/setup
   /bin/setup
  fi
 else
  echo "Install media not found!"
  cat /etc/version
 fi
fi
